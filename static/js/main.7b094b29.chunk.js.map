{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","initialGoods","useState","goods","setGoods","isStarted","setIsStarted","className","type","onClick","sortedByAlphabet","sort","sortedByLength","a","b","length","reversed","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"qNAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,IAAMC,EAAeF,EACrB,EAA0BG,mBAAmBH,GAA7C,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAkB,GAApD,mBAAOG,EAAP,KAAkBC,EAAlB,KA6BA,OACE,qBAAKC,UAAU,MAAf,SACIF,EAWE,gCACE,wBACEG,KAAK,SACLC,QA3Ce,WACzB,IAAMC,EAA6B,YAAIT,GAAcU,OAErDP,EAASM,IAyCCH,UAAU,oBAHZ,iCAQA,wBACEC,KAAK,SACLC,QA7CS,WACnB,IAAMG,EACF,YAAIX,GAAcU,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAElDX,EAASQ,IA0CCL,UAAU,oBAHZ,4BAQA,wBACEC,KAAK,SACLC,QA9CI,WACd,IAAMO,EAAqB,YAAIb,GAAOc,UAEtCb,EAASY,IA4CCT,UAAU,oBAHZ,qBAQA,wBACEC,KAAK,SACLC,QAhDE,WACZL,EAASH,IAgDCM,UAAU,oBAHZ,mBAQA,oBAAIA,UAAU,QAAd,SACGJ,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAeZ,UAAU,cAAzB,SACGY,GADMA,WA5Cf,wBACEX,KAAK,SACLC,QAVI,WACZH,GAAa,IAULC,UAAU,oBAHZ,sBClDVa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7b094b29.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const initialGoods = goodsFromServer;\n  const [goods, setGoods] = useState<string[]>(goodsFromServer);\n  const [isStarted, setIsStarted] = useState<boolean>(false);\n\n  const sortAlphabetically = () => {\n    const sortedByAlphabet: string[] = [...initialGoods].sort();\n\n    setGoods(sortedByAlphabet);\n  };\n\n  const sortByLength = () => {\n    const sortedByLength: string[]\n      = [...initialGoods].sort((a, b) => a.length - b.length);\n\n    setGoods(sortedByLength);\n  };\n\n  const reverse = () => {\n    const reversed: string[] = [...goods].reverse();\n\n    setGoods(reversed);\n  };\n\n  const reset = () => {\n    setGoods(initialGoods);\n  };\n\n  const start = () => {\n    setIsStarted(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            onClick={start}\n            className=\"button is-warning\"\n          >\n            Start\n          </button>\n        )\n        : (\n          <div>\n            <button\n              type=\"button\"\n              onClick={sortAlphabetically}\n              className=\"button is-warning\"\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={sortByLength}\n              className=\"button is-warning\"\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={reverse}\n              className=\"button is-warning\"\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={reset}\n              className=\"button is-warning\"\n            >\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {goods.map(good => (\n                <li key={good} className=\"Goods__item\">\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}